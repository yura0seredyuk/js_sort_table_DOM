{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelector","tbody","arrOfEmployees","querySelectorAll","addEventListener","e","indexOfElement","target","cellIndex","sort","prew","next","firstElement","children","textContent","secondElement","includes","regexp","RegExp","replace","isNaN","localeCompare","append"],"mappings":";AAAA,aAQA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAJA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAQF,SAASC,cAAc,SAC/BE,EAAqBH,EAAAA,SAASI,iBAAiB,eAErDL,EAAMM,iBAAiB,QAAS,SAACC,GACzBC,IAAAA,EAAiBD,EAAEE,OAAOC,UAEhCN,EAAeO,KAAK,SAACC,EAAMC,GACrBC,IAAAA,EAAeF,EAAKG,SAASP,GAAgBQ,YAC7CC,EAAgBJ,EAAKE,SAASP,GAAgBQ,YAE9CF,GAAAA,EAAaI,SAAS,KAAM,CACxBC,IAAAA,EAAS,IAAIC,OAAO,WAE1BN,EAAeA,EAAaO,QAAQF,EAAQ,IAC5CF,EAAgBA,EAAcI,QAAQF,EAAQ,IAGzCG,OAAAA,MAAMR,GACTA,EAAaS,cAAcN,GAC3BH,EAAeG,IAGrBd,EAAMqB,OAANrB,MAAAA,EAAgBC,EAAAA","file":"main.68565427.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write code here\n\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst arrOfEmployees = [...document.querySelectorAll('tbody > tr')];\n\nthead.addEventListener('click', (e) => {\n  const indexOfElement = e.target.cellIndex;\n\n  arrOfEmployees.sort((prew, next) => {\n    let firstElement = prew.children[indexOfElement].textContent;\n    let secondElement = next.children[indexOfElement].textContent;\n\n    if (firstElement.includes('$')) {\n      const regexp = new RegExp(/[^0-9]/g);\n\n      firstElement = firstElement.replace(regexp, '');\n      secondElement = secondElement.replace(regexp, '');\n    }\n\n    return isNaN(firstElement)\n      ? firstElement.localeCompare(secondElement)\n      : firstElement - secondElement;\n  });\n\n  tbody.append(...arrOfEmployees);\n});\n"]}